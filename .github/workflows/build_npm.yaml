name: Build NPM Package
run-name: Build NPM Package

on:
  workflow_call:
    inputs:
      node-version:
        description: "which node version to use - example: '17.x/18.x'"
        required: false
        type: string
        default: 16.13.0
      build-command:
        description: "which build command to run - example: 'npm run build'"
        required: false
        type: string
        default: build
      name:
        description: "name of the package - example: 'my-package'"
        required: false
        type: string
        default: my-package

jobs:
  get-standalone-commit:
    runs-on: ubuntu-latest
    outputs:
      standalone-commit: ${{ steps.get-commit.outputs.standalone-commit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}
          sparse-checkout: |
            kaltura-ws.json
          sparse-checkout-cone-mode: false
      - name: Get commit
        id: get-commit
        run: |
          COMMIT=$(jq -r '.commands.bookmark.standalone[]' kaltura-ws.json)
          echo "standalone-commit=${COMMIT}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: get-standalone-commit
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get-standalone-commit.outputs.standalone-commit }}
      - name: Remove Node Modules
        run: rm -rf node_modules
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
      - name: Install Dependencies
        run: npm install
      - name: Build
        run: npm run ${{ inputs.build-command }}
      - name: Zip Package
        run: zip -r latest.zip dist
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: latest
          path: latest.zip
          retention-days: 5
      - name: Get Release Info
        id: get-release-info
        run: |
          DATA=$(curl -s -X GET \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref }})
          UPLOAD_URL=$(echo $DATA | jq -r '.upload_url')
          echo "upload-url=${UPLOAD_URL}" >> $GITHUB_OUTPUT
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get-release-info.outputs.upload-url }}
          asset_path: ./latest.zip
          asset_name: ${{ inputs.name }}-${{ github.ref }}.zip
          asset_content_type: application/zip