name: Update schema
run-name: Update schema

on:
  workflow_call:
    secrets:
      PLAYER_CENTRAL_ACCOUNT_ID:
        required: true
      PLAYER_SERVICES_ACCOUNT_ID:
        required: true
      PLAYER_S3_BUCKET_DEPLOYMENT:
        required: true
      PLAYKIT_SECRET_IDS:
        required: true
    inputs:
      env:
        description: "env - example: 'qa/prod'"
        required: false
        type: string
      type:
        description: "choose player or plugin or dependency - example: 'plugin'"
        required: true
        type: string
      schema-type:
        description: "schema-type - example: 'playerV3Versions/playerV3OvpVersions'"
        required: true
        type: string
      name:
        description: "name - example: 'playkit-youbora'"
        required: true
        type: string
      version:
        description: "version - example: '2.3.5-canary.5-39e87cf'"
        required: true
        type: string
      player-type:
        description: "player type - example 'ovp tv'"
        required: false
        type: string


env:
  PLAYERS: "ovp tv"

jobs:
  update-schema:
    runs-on: [ ubuntu-latest ]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.PLAYER_CENTRAL_ACCOUNT_ID }}:role/central-oidc-github-actions
          role-session-name: githubAction
          aws-region: "eu-central-1"

      - name: Update schema central deployment secret
        run: |
          STAGE=""
          if [ "${{ inputs.env }}" = "prod" ]; then
            STAGE="qa"
          else
            STAGE="canary"
          fi

          PLAYKIT_SECRET_ID=$(echo ${{ secrets.PLAYKIT_SECRET_IDS }} | jq -re ".${{ inputs.env }}.${{ inputs.schema-type }}.$STAGE")
          
          JSON_SCHEMA=$(aws secretsmanager \
            get-secret-value --query SecretString \
            --secret-id "$PLAYKIT_SECRET_ID" \
            --no-cli-pager \
            | jq -r)

          echo "JSON Schema before the changes:"
          echo $JSON_SCHEMA | jq -r

          if [ "${{ inputs.type }}" = "plugin" ]; then
            JSON_SCHEMA=$(echo $JSON_SCHEMA | jq '."'"${{ inputs.name }}"'" = "'"${{ inputs.version }}"'"')
          elif [ "${{ inputs.type }}" = "player" ]; then
            for player in ${{ inputs.player-type }}; do
              JSON_SCHEMA=$(echo $JSON_SCHEMA | jq '."'"kaltura-${player}-player"'" = "'"${{ inputs.version }}"'"')
            done
          else
            echo "wrong type..."
            exit 1
          fi

          echo "JSON Schema after the changes:"
          echo ${JSON_SCHEMA}

          aws secretsmanager \
            put-secret-value \
            --secret-id "$PLAYKIT_SECRET_ID" \
            --secret-string "${JSON_SCHEMA}"
