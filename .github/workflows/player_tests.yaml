name: Player And Plugin Tests
run-name: Player And Plugin Tests

on:
  workflow_call:
    inputs:
      yarn-upgrade-list:
        description: "list of packages to overwrite in package.json - example: 'playkit-js/playkit-js@canary @playkit-js/playkit-js-dash@canary'"
        required: false
        type: string
      yarn-run-to-execute:
        description: "list of package.json scripts - example: 'eslint flow test'"
        required: true
        type: string
      run-on-ubuntu:
        description: "run on ubuntu - example 'true/false'"
        required: false
        type: string
        default: 'true'
      run-on-macos:
        description: "run on ubuntu - example 'true/false'"
        required: false
        type: string
        default: 'false'

jobs:
  running-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        #os: [ubuntu-latest]
        node-version: [ 17.x ]
    runs-on: ${{ matrix.os }}
    if: ((${{ matrix.os }} == 'macos-latest') && (${{ inputs.run-on-macos }} == 'true')) || ((${{ matrix.os }} == 'ubuntu-latest') && (${{ inputs.run-on-ubuntu }} == 'true'))
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Node.js version ${{ matrix.node-version }}
        uses: Wandalen/wretry.action@master
        with:
          action: actions/setup-node@v3
          with: |
            node-version: ${{ matrix.node-version }}
          attempt_limit: 3
          attempt_delay: 2000
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
      - name: Setup Firefox
        if: matrix.os == 'ubuntu-latest'
        uses: browser-actions/setup-firefox@v1
      - name: Yarn upgrade ${{ inputs.yarn-upgrade-list }}
        if: ${{ inputs.yarn-upgrade-list }}
        run: |
          for command in ${{ inputs.yarn-upgrade-list }}; do
            yarn upgrade $command
          done
      - name: Yarn install
        run: yarn install
      - name: Yarn run ${{ inputs.yarn-run-to-execute }}
        run: |
          for command in ${{ inputs.yarn-run-to-execute }}; do
            yarn run $command
          done
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"

