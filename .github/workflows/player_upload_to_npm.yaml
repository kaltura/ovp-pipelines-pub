name: Upload packages to NPM
run-name: Upload packages to NPM

on:
  workflow_call:
    secrets:
      PLAYER_NPM_TOKEN:
        required: true
      PLAYER_GITHUB_BOT_TOKEN:
        required: true
    inputs:
      yarn-upgrade-list:
        description: "list of packages to overwrite in package.json - example: 'playkit-js/playkit-js@canary @playkit-js/playkit-js-dash@canary'"
        required: false
        type: string
      env:
        description: "env - example: 'qa/prod'"
        required: false
        type: string
      enabled-openssl-legacy-provider:
        description: "enable the NODE_OPTIONS --openssl-legacy-provider - example: 'ture/false'"
        required: false
        type: string
        default: 'true'
    outputs:
      name:
        description: "name"
        value: ${{ jobs.upload-to-npm.outputs.name }}
      version:
        description: "version"
        value: ${{ jobs.upload-to-npm.outputs.version }}
      full-npm-name:
        description: "full-npm-name"
        value: ${{ jobs.upload-to-npm.outputs.full-npm-name }}

jobs:
  upload-to-npm:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [ 17.x ]
    runs-on: ${{ matrix.os }}
    outputs:
      name: ${{ steps.name.outputs.name }}
      version: ${{ steps.version.outputs.version }}
      full-npm-name: ${{ steps.full_npm_name.outputs.full_npm_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PLAYER_GITHUB_BOT_TOKEN }}
      - name: Node.js version ${{ matrix.node-version }}
        uses: Wandalen/wretry.action@master
        with:
          action: actions/setup-node@v3
          with: |
            node-version: ${{ matrix.node-version }}
            registry-url: 'https://registry.npmjs.org'
            always-auth: true
            token: ${{ secrets.PLAYER_NPM_TOKEN }}
          attempt_limit: 3
          attempt_delay: 2000

      - name: Setup Git
        run: |
          git config --global user.email "ovp.cp@kaltura.com"
          git config --global user.name "ovp-github-actions"

      - name: Yarn upgrade ${{ inputs.yarn-upgrade-list }}
        if: ${{ inputs.yarn-upgrade-list }}
        run: |
          for command in ${{ inputs.yarn-upgrade-list }}; do
            yarn upgrade $command
          done

      - name: Yarn install
        run: yarn install

      - name: Yarn run release
        run: |
          if [ "${{ inputs.env }}" = "prod" ]; then
            yarn run release
          else
            yarn run release --prerelease canary --skip.commit=true --skip.tag=true
          fi
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"

      - name: Update version in package.json file
        run: |
          sha=$(echo "${GITHUB_SHA::7}")
          currentVersion=$(npx -c 'echo "$npm_package_version"')
          commitNumberAfterTag=$(git rev-list  `git rev-list --tags --no-walk --max-count=1`..HEAD --count)
          newVersion=$(echo ${currentVersion} | sed -e "s/canary\.[[:digit:]]/canary.${commitNumberAfterTag}-${sha}/g")
          echo "New version ${newVersion}"
          sed -iE "s/${currentVersion}/${newVersion}/g" package.json
          sed -iE "s/${currentVersion}/${newVersion}/g" CHANGELOG.md
          rm package.jsonE
          rm CHANGELOG.mdE

      - name: Yarn run build with NODE_OPTIONS
        if: ${{ inputs.enabled-openssl-legacy-provider == 'true' }}
        run: |
          yarn run build
          ls -la dist/
        env:
          NODE_OPTIONS: "--openssl-legacy-provider"

      - name: Yarn run build without NODE_OPTIONS
        if: ${{ inputs.enabled-openssl-legacy-provider != 'true' }}
        run: |
          yarn run build
          ls -la dist/

      - name: Npm publish
        run: |
          echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" > .npmrc
          if [ "${{ inputs.env }}" = "prod" ]; then
            npm publish .
          else
            npm publish . --tag canary
          fi
        env:
          NPM_AUTH_TOKEN: ${{ secrets.PLAYER_NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.PLAYER_NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.PLAYER_NPM_TOKEN }}

      - name: Yarn run pushTaggedRelease and create github release
        if: ${{ inputs.env == 'prod' }}
        run: |
          yarn run pushTaggedRelease
          npx conventional-github-releaser -p angular -t ${{ secrets.PLAYER_GITHUB_BOT_TOKEN }} || true

      - name: Output name
        id: name
        run: |
          packageName=$(npx -c 'echo "$npm_package_name"')
          shortName=$(echo "${packageName}"| sed -e 's/@playkit-js\///g' -e 's/playkit-js-//g')
          if [ "${shortName}" = "playkit-js" ]; then
            name="playkit"
          else
            name="playkit-${shortName}"
          fi
          echo $name
          echo "name=${name}" >> $GITHUB_OUTPUT

      - name: Output version
        id: version
        run: |
          version=$(npx -c 'echo "$npm_package_version"')
          echo $version
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Output full package name and version
        id: full_npm_name
        run: |
          packageName=$(npx -c 'echo "$npm_package_name"')
          currentVersion=$(npx -c 'echo "$npm_package_version"')
          full_npm_name="${packageName}@${currentVersion}"
          echo $full_npm_name
          echo "full_npm_name=${full_npm_name}" >> $GITHUB_OUTPUT
