name: Deploy uiconf
run-name: Deploy uiconf

on:
  workflow_call:
    secrets:
      JENKINS_TOKEN:
        required: true
    inputs:
      stage:
        description: "stage - example: 'canary/beta/latest'"
        required: true
        type: string
      env:
        description: "env - example: 'qa/prod/all'"
        required: false
        type: string
      version:
        description: "version - example: '1.00.000'"
        required: true
        type: string
      schema-type:
        description: "schema-type - example: 'playerV3Versions/playerV3OvpVersions'"
        required: true
        type: string

jobs:
  deploy-uiconf:
    runs-on: [ ubuntu-latest ]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Trigger jenkins job for uiconf deployment
        run: |
          if [ "${{ inputs.stage }}" = "canary" ]; then
            generate_post_data='{"stage": "${{ inputs.stage }}", "version": "${{ inputs.version }}", "schema_type": "${{ inputs.schema-type }}"}'
          else
            generate_post_data='{"stage": "${{ inputs.stage }}", "env": "${{ inputs.env }}", "version": "${{ inputs.version }}", "schema_type": "${{ inputs.schema-type }}"}'
          fi

          for i in {1..3}; do
            echo "Try number $i for pinging Jenkins...\n"
            HTTP_CODE=$(curl -k -d "${generate_post_data}" -H "Content-Type: application/json" --silent --output /dev/stderr --write-out "%{http_code}" --fail -X POST https://jenkins-central.prod.ovp.kaltura.com/generic-webhook-trigger/invoke?token=${{ secrets.JENKINS_TOKEN }})
            STATUS_CODE=$?
            echo "Request return with http code $HTTP_CODE and curl finished with status code $STATUS_CODE"
            if [ "$HTTP_CODE" -eq 200 ] && [ "$STATUS_CODE" -eq 0 ]; then
              HTTP_SUCCESS=true
              break
            fi
          done

          echo "Jenkins ping success status - $HTTP_SUCCESS"

          if [ "$HTTP_SUCCESS" = true ]; then
            exit 0
          else
            exit 1
          fi

