name: Run NPM
run-name: Run NPM

on:
  workflow_call:
    inputs:
      node-version:
        description: "which node version to use - example: '17.x/18.x'"
        required: false
        type: string
        default: 16.13.0
      build-steps:
        description: "which build command to run - example: 'npm run build'"
        required: false
        type: string
        default: '["build"]'
      build-ref:
        description: "which ref to use for the build - example: 'main'"
        required: false
        type: string
        default: ${{ github.ref }}
      remove-node-modules:
        description: remove node_modules before build
        required: false
        type: boolean
        default: false
      build-output-dir:
        description: build output directory
        required: false
        type: string
        default: build-${{ github.run_id }}
      build-artifacts:
        description: build output directory
        required: false
        type: string
      upload-artifact:
        description: upload artifact
        required: false
        type: boolean
        default: false

    outputs:
      name:
        description: name of the package
        value: ${{ jobs.run.outputs.name }}
      version:
        description: version of the package
        value: ${{ jobs.run.outputs.version }}
      full-name:
        description: full name of the package
        value: ${{ jobs.run.outputs.full-name }}
      artifact-name:
        description: artifact name
        value: ${{ jobs.run.outputs.artifact-name }}

jobs:
  run:
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.npm-package.outputs.name }}
      version: ${{ steps.npm-package.outputs.version }}
      full-name: ${{ steps.npm-package.outputs.full-name }}
      artifact-name: ${{ steps.zip.outputs.artifact }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.build-ref }}
      - name: Read NPM Package Info
        id: npm-package
        run: |
          FILTER="name version"
          for i in $FILTER; do
            echo "$i=$(jq -r ".$i" package.json)" >> $GITHUB_OUTPUT
          done
          echo "full-name=$(jq -r ".name + \"-v\" + .version" package.json)" >> $GITHUB_OUTPUT
      - name: Remove Node Modules
        if: ${{ inputs.remove-node-modules }}
        run: rm -rf node_modules
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
      - name: Install NPM Dependencies
        run: npm install
      - name: Build NPM Package
        run: echo '${{ inputs.build-steps }}' | jq -r '.[] | @sh' | xargs -I {} sh -c "npm run {}"
      - name: Cache NPM Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Zip Package
        if: ${{ inputs.upload-artifact }}
        id: zip
        run: |
          ARTIFACT="${{ steps.npm-package.outputs.name }}-v${{ steps.npm-package.outputs.version }}.zip"
          OUTPUT_DIR=${{ inputs.build-output-dir }}
          BUILD_ARTIFACTS=${{ inputs.build-artifacts }}

          mkdir -p $OUTPUT_DIR
          cd $OUTPUT_DIR

          echo "${BUILD_ARTIFACTS}" | jq -r '.[] | @sh' | xargs -I {} sh -c "cp -r ../{} ."

          zip -r \
            "../${ARTIFACT}" \
            .

          cd ..

          echo "Crearted artifact archive: $ARTIFACT"
          echo "artifact=${ARTIFACT}" >> $GITHUB_OUTPUT
      - name: Upload Artifact
        if: ${{ inputs.upload-artifact }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.zip.outputs.artifact }}
          path: ${{ steps.zip.outputs.artifact }}
          retention-days: 1